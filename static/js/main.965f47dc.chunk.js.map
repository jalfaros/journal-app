{"version":3,"sources":["types/types.js","firebase/config.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","GoogleAuthProvider","initialState","notes","activeNote","loading","msg","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","JournalApp","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"oOAAaA,EACa,eADbA,EAEa,gBAFbA,EAGa,iBAHbA,EAIa,oBAJbA,EAKa,mBALbA,EAMa,qBANbA,EAOa,mBAPbA,EAQa,0BARbA,EASa,qBATbA,EAUa,sBAVbA,EAYa,uBAZbA,EAaa,yB,qBCE1BC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAMAP,IAASQ,YACO,IAAIR,IAASS,KAAKC,mB,wBAD7C,I,wBCdMC,EAAe,CACjBC,MAAO,GACPC,WAAa,MCHXF,EAAe,CACjBG,SAAS,EACTC,IAAK,MCKHC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAErGC,EAAmBC,YAAgB,CACrCZ,KCPuB,WAA2B,IAAzBa,EAAwB,uDAAhB,GAAIC,EAAY,uCAEjD,OAASA,EAAOC,MAGZ,KAAKzB,EACD,MAAO,CACH0B,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,aAG7B,KAAK7B,EACD,MAAO,GAEX,QACI,OAAOuB,IDPfO,GDNqB,WAAmC,IAAlCP,EAAiC,uDAAzBX,EAAcY,EAAW,uCAEvD,OAAQA,EAAOC,MAEX,KAAKzB,EACD,OAAO,2BACAuB,GADP,IAEIP,IAAKQ,EAAOG,UAGpB,KAAK3B,EACD,OAAO,2BACAuB,GADP,IAEIP,IAAK,OAGb,KAAKhB,EACD,OAAO,2BACAuB,GADP,IAEIR,SAAS,IAGjB,KAAKf,EACD,OAAO,2BACAuB,GADP,IAEIR,SAAS,IAGjB,QACI,OAAOQ,ICtBfV,MFLwB,WAAqC,IAAnCU,EAAkC,uDAA1BX,EAAcY,EAAY,uCAE5D,OAASA,EAAOC,MAGZ,KAAKzB,EACD,OAAO,2BACAuB,GADP,IAEIT,WAAW,eACJU,EAAOG,WAGtB,KAAK3B,EACD,OAAO,2BACAuB,GADP,IAEIV,MAAOW,EAAOG,UAGtB,KAAK3B,EACD,kCACOuB,GADP,IAEIV,MAAM,CAAGW,EAAOG,SAAX,mBAAuBJ,EAAMV,UAG1C,KAAKb,EACD,kCACOuB,GADP,IAEIV,MAAOU,EAAMV,MAAMkB,KACf,SAAAC,GAAI,OAAIA,EAAKC,KAAQT,EAAOG,QAAQM,GAC9BT,EAAOG,QAAQK,KACfA,OAIlB,KAAKhC,EACD,OAAO,2BACAuB,GADP,IAEIT,WAAY,KACZD,MAAOU,EAAMV,MAAMqB,QACf,SAAAF,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,aAIvC,KAAK3B,EACD,OAAOY,EAEX,QACI,OAAOW,MIhDNY,GFWQC,YACjBf,EACAJ,EACIoB,YAAiBC,OEdC,c,OCA1BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.965f47dc.chunk.js","sourcesContent":["export const types = { \r\n    login               : '[Auth] Login',\r\n    logout              : '[Auth] Logout',\r\n    uiSetError          : '[Ui] Set Error',\r\n    uiRemoveError       : '[Ui] Remove Error',\r\n    uiSetLoading        : '[Ui] Set Loading',\r\n    uiUnsetLoading      : '[Ui] Unset Loading',\r\n    notesAddNew         : '[Notes] New Note',\r\n    notesActive         : '[Notes] Set Active Note',\r\n    notesLoad           : '[Notes] Load Notes',\r\n    notesUpdated        : '[Notes] Update Note',\r\n    notesFileUpload     : '[Notes] File Image Upload',\r\n    notesDeleted        : '[Notes] Deleted Note',\r\n    notesLogout         : '[Notes] Logout Cleaner',\r\n    \r\n}","\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCCCUtJMksDnDaVl1ueI2MDmP_KZ22LvwY\",\r\n    authDomain: \"react-app-curso-a6deb.firebaseapp.com\",\r\n    projectId: \"react-app-curso-a6deb\",\r\n    storageBucket: \"react-app-curso-a6deb.appspot.com\",\r\n    messagingSenderId: \"182223328218\",\r\n    appId: \"1:182223328218:web:b5553db4984e99e45066e3\"\r\n};\r\n\r\n\r\nfirebase.initializeApp( firebaseConfig );\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [], \r\n    activeNote : null\r\n}\r\n\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                activeNote: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: action.payload\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state, \r\n                notes: state.notes.map(\r\n                    note => note.id  === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDeleted:\r\n            return {\r\n                ...state, \r\n                activeNote: null,\r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload\r\n                )\r\n            }\r\n\r\n        case types.notesLogout:\r\n            return initialState;\r\n        \r\n        default:\r\n            return state;\r\n    }   \r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msg: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msg: null\r\n            }\r\n        \r\n        case types.uiSetLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiUnsetLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst combinedReducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n// El store recibe siempre como inicializaci칩n uno o m치s reducers...\r\n\r\nexport const store = createStore(\r\n    combinedReducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n// Siempre en el reducer se recibe el state y el action\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid, \r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\n \nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\n\n\nexport const JournalApp = () => {\n    return (\n        // Se envuelve el provider desde el punto m치s alto para poder proveer toda nuestra aplicaci칩n\n        <Provider store = { store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}